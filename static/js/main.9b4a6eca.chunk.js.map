{"version":3,"sources":["UI/Bricks/MyLink.tsx","UI/Header/Header.tsx","UI/Main/Main.tsx","DB/DB.ts","BLL/Reducers/desireReducer.ts","BLL/Selectors/desireSelector.ts","UI/Bricks/Paginator.tsx","UI/Bricks/Card.tsx","UI/Bricks/Template.tsx","UI/Desire/Desire.tsx","BLL/Reducers/otherReducer.ts","BLL/Reducers/reasonReducer.ts","BLL/Reducers/veryReducer.ts","BLL/store.ts","BLL/Selectors/verySelector.ts","UI/Very/Very.tsx","BLL/Selectors/reasonSelector.ts","UI/Reason/Reason.tsx","BLL/Selectors/otherSelector.ts","UI/Other/Other.tsx","UI/Authors/Author.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["MyLink","to","title","className","activeClassName","Nav","Link","MyButton","props","submitForm","useFormikContext","onClick","Header","useState","show","setShow","handlerClose","Navbar","bg","variant","sticky","collapseOnSelect","expand","Container","Brand","style","color","Toggle","aria-controls","Collapse","initialValues","price","validate","values","errors","onSubmit","touched","handleChange","handleSubmit","Modal","onHide","Title","Body","type","name","value","onChange","Footer","Main","height","paddingTop","Math","round","AlinaName","DB","desires","very","reasons","others","authors","tilte","SET_PAGE","initialState","page","portionSizeElements","portionSize","setPage","pageSelector","state","desire","portionSizeSelector","desiresSelector","portionSizeElementsSelector","Paginator","count","callback","portionNumber","setPortionNumber","buttons","i","e","push","ceil","prev","slice","Card","Template","isPC","elementsSelector","useEffect","dispatch","useDispatch","pageFromSelector","useSelector","elements","elementsJSX","map","length","Desire","rootReducer","combineReducers","action","reason","other","store","createStore","verysSelector","Very","reasonsSelector","Reason","othersSelector","Other","Author","a","App","window","innerHeight","setHeight","innerWidth","setMode","setSize","addEventListener","removeEventListener","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9b4a6eca.chunk.js","sourcesContent":["import { Nav } from \"react-bootstrap\"\r\nimport {NavLink} from \"react-router-dom\"\r\n\r\n\r\n\r\ntype PropsType={\r\n    to:string\r\n    title:string\r\n    className?:string\r\n    activeClassName?:string\r\n}\r\nexport const MyLink:React.FC<PropsType>=({to,title,className,activeClassName})=>{\r\n    return<Nav.Link className=\"text-center\">\r\n        <NavLink \r\n        to={to}\r\n        activeClassName={activeClassName ?\r\n            activeClassName :\r\n            \"header__link_active\"}\r\n        className={className ?\r\n         className : \r\n         \"header__link header__link_hover\"}>\r\n            {title}\r\n        </NavLink>\r\n    </Nav.Link>\r\n}","import { Formik, useFormikContext } from \"formik\"\r\nimport React, { useState } from \"react\"\r\nimport { Container, Modal, Nav, Navbar } from \"react-bootstrap\"\r\nimport {NavLink} from \"react-router-dom\"\r\nimport { MyLink } from \"../Bricks/MyLink\"\r\n\r\ntype PropsButtonType={}\r\nconst MyButton:React.FC<PropsButtonType>=(props)=>{\r\n    \r\n    const {submitForm}=useFormikContext()\r\n\r\n    return<button\r\n    onClick={submitForm}\r\n    className=\"btn btn-success\">\r\n        Оформить\r\n    </button>\r\n}\r\ntype PropsType={}\r\nexport const Header:React.FC<PropsType>=(props)=>{\r\n    \r\n    let [show,setShow]=useState(false)\r\n    const handlerOpen=()=>{\r\n        setShow(true)\r\n    }\r\n    const handlerClose=()=>{\r\n        setShow(false)\r\n    }\r\n\r\n    return<div>\r\n        <Navbar bg=\"primary\" variant=\"dark\" \r\n        sticky=\"top\" collapseOnSelect\r\n        expand=\"md\">\r\n            <Container>\r\n                <Navbar.Brand>\r\n                    <NavLink \r\n                    style={{color:\"white\"}}\r\n                    className=\"header__link header__link_hover\" \r\n                    to=\"/\">\r\n                        Главная\r\n                    </NavLink>   \r\n                </Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                <Navbar.Collapse>\r\n                    <Nav className=\"mr-auto\">\r\n                        <MyLink to=\"/desire\"\r\n                        title={\"Пожелания\"}/>\r\n                        <MyLink to=\"/very\"\r\n                        title={\"Тот самый)\"}  />\r\n                        <MyLink to=\"/reason\"\r\n                        title={\"Причины побить\"} />\r\n                        <MyLink to=\"/other\"\r\n                        title={\"Другое\"}/>\r\n                        <MyLink to=\"/author\"\r\n                        title={\"Авторы\"}/>\r\n                        <Nav.Link className=\"text-center\">\r\n                        <NavLink to=\"\"\r\n                        onClick={handlerOpen}\r\n                        className=\"header__link header__link_hover\">\r\n                            Оформить кредит\r\n                        </NavLink>\r\n                        </Nav.Link>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Container>\r\n        </Navbar>\r\n        <Formik\r\n        initialValues={{price:\"0\"}}\r\n        validate={(values)=>{\r\n            let errors:any={price:null};\r\n            if(values.price){\r\n                errors={price:\"У нас нет еще такой суммы)\"}\r\n            }\r\n            return errors\r\n        }}\r\n        onSubmit={()=>{\r\n            setShow(false)\r\n        }}\r\n        >\r\n        {({\r\n            values,\r\n            errors,\r\n            touched,\r\n            handleChange,\r\n            handleSubmit\r\n        })=><form onSubmit={handleSubmit}>\r\n        <Modal show={show}\r\n        onHide={handlerClose}>\r\n            <Modal.Header>\r\n                <Modal.Title>\r\n                    Оформить кредит\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <input \r\n                type=\"number\"\r\n                name=\"price\" \r\n                value={values.price}\r\n                onChange={handleChange}         \r\n                className=\"form-control\" />\r\n                <div className=\"text-danger\">\r\n                    {errors.price && touched.price &&\r\n                    errors.price}\r\n                </div>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <button \r\n                onClick={handlerClose}\r\n                className=\"btn btn-danger\">\r\n                    Закрыть\r\n                </button>\r\n                <MyButton/>\r\n            </Modal.Footer>\r\n        </Modal>\r\n        </form>}\r\n        </Formik>\r\n    </div>\r\n}\r\n\r\n","\r\n\r\n\r\n\r\ntype PropsType={\r\n    height:number\r\n}\r\nexport const Main:React.FC<PropsType>=({height})=>{\r\n    return<div \r\n    style={{\r\n        paddingTop:Math.round(height/3)\r\n    }}\r\n    \r\n    className=\"main text-center\"> \r\n        <div>\r\n            С др, Санек!)\r\n        </div>\r\n    </div>\r\n}","import { AuthorType, DesireType, OtherType, ReasonType, VeryType } from \"../Types/Types\";\r\n\r\n\r\nexport const AlinaName=\"Кира Данилова\"\r\nexport const DB={\r\n    desires:[\r\n        {title:\"Здоровья\"},\r\n        {title:\"Продвижения по карьерной лестнице\"},\r\n        {title:\"Достижения целей\"},\r\n        {title:\"Поступления в желанный университет\"},\r\n        {title:\"Найти работу\"},\r\n        {title:\"Отведать изысканного\"},\r\n        {title:\"Арбуз\"},\r\n        {title:\"Лимон\"}\r\n    ] as DesireType[],\r\n    very:[\r\n        {title:\"Человек который пойдет куда угодно, даже пешком до Невского... \"},\r\n        {title:\"Тот, кто всегда угостит бутербродом в гостях...\"},\r\n        {title:\"ГДшер, который затащит этот сезон)\"}\r\n    ] as VeryType[],\r\n    reasons:[\r\n        {title:\"Закрыл Даниэля на балконе. Он был в шоке\"},\r\n        {title:\"Так и не вернул Владу 22 рубля, за ту самую сосиску в тесте, которую он купил тебе в столовке в 8 классе\"}\r\n    ] as ReasonType[],\r\n    others:[\r\n        {title:\"Не важно сколько баллов - главное чтобы человек хороший был)\"} ,\r\n        {title:\"Есть пробитие!)\"}\r\n    ] as OtherType[],\r\n    authors:[\r\n        {title:\"Даниэль Романовский\"},\r\n        {title:\"Владислав Ермошкин\"},\r\n        {title:\"Иван Маяковский\"},\r\n        {tilte:AlinaName},\r\n        {title:\"Юрий Марцичук\"},\r\n        {title:\"Андрей Кириенко\"}\r\n    ] as AuthorType[]\r\n}\r\n","import { DB } from \"../../DB/DB\";\r\nimport { DesireType } from \"../../Types/Types\";\r\n\r\nconst SET_PAGE:\"desireReducer/SET_PAGE\"=\"desireReducer/SET_PAGE\"\r\n\r\nconst initialState={\r\n    desires:[...DB.desires] as DesireType[],\r\n    page:1 as number,\r\n    portionSizeElements:7 as number, // For count elements in one page\r\n    portionSize:5 as number //For count button in one portion\r\n}\r\n\r\ntype InitialStateType=typeof initialState\r\ntype ActionType=SetPageType\r\n\r\nexport const desireReducer=(state=initialState,action:ActionType):InitialStateType=>{\r\n    switch(action.type){\r\n        case SET_PAGE:\r\n            return{\r\n                ...state,\r\n                page:action.page\r\n            }\r\n        default:return state\r\n    }\r\n}\r\n\r\ntype SetPageType={\r\n    type:typeof SET_PAGE\r\n    page:number\r\n}\r\nexport const setPage=(page:number):SetPageType=>{\r\n    return{\r\n        type:SET_PAGE,\r\n        page\r\n    }\r\n}","import { AppStateType } from \"../store\";\r\n\r\n\r\nexport const pageSelector=(state:AppStateType):number=>{\r\n    return state.desire.page\r\n}\r\nexport const portionSizeSelector=(state:AppStateType)=>{\r\n    return state.desire.portionSize\r\n}\r\nexport const desiresSelector=(state:AppStateType)=>{\r\n    return state.desire.desires\r\n}\r\nexport const portionSizeElementsSelector=(state:AppStateType)=>{\r\n    return state.desire.portionSizeElements\r\n}","import { useState } from \"react\"\r\n\r\n\r\n\r\ntype PropsType={\r\n    page:number\r\n    portionSize:number\r\n    portionSizeElements:number \r\n    count:number//all elements \r\n    callback:(page:number)=>void\r\n}\r\nexport const Paginator:React.FC<PropsType>=({page,portionSize,count,callback,portionSizeElements})=>{\r\n    \r\n    let [portionNumber,setPortionNumber]=useState(1)\r\n    \r\n    const handlerBack=()=>{\r\n        setPortionNumber(prev=>--prev)\r\n    }\r\n    const handlerNext=()=>{\r\n        setPortionNumber(prev=>++prev)\r\n    }\r\n\r\n    //Create Buttons\r\n    let buttons=[]\r\n    for(let i=1;i<=Math.ceil(count/portionSizeElements);i++){\r\n        let e:any=null//JSX element\r\n        if(i==page){\r\n            e=<button \r\n            className=\"btn btn-light\">\r\n                {i}\r\n            </button>\r\n        }else{\r\n            e=<button\r\n            onClick={()=>callback(i)}\r\n            className=\"btn btn-primary\">\r\n                {i}\r\n            </button>\r\n        }\r\n        buttons.push(e)\r\n    }\r\n\r\n\r\n    //render\r\n    return<div className=\"btn-group\">\r\n        {portionNumber>1 &&\r\n        <button\r\n        className=\"btn btn-light\"\r\n        onClick={handlerBack}\r\n        >\r\n            {\"<\"}\r\n        </button>}\r\n           \r\n           \r\n            {[...buttons].slice((portionNumber-1)*portionSize,portionNumber*portionSize)}\r\n        \r\n        \r\n        {portionNumber*portionSize<Math.ceil(count/portionSizeElements) &&\r\n        <button\r\n        onClick={handlerNext}\r\n        className=\"btn btn-light\">\r\n            {\">\"}\r\n        </button>}\r\n    </div>\r\n}","\r\n\r\ntype PropsType={\r\n    title:string\r\n}\r\nexport const Card:React.FC<PropsType>=({title})=>{\r\n    return<div key={title} className=\"w-100 center mt-2 mb-2\">\r\n    <div className=\"template__card\">\r\n        {title}\r\n    </div>\r\n    </div>\r\n}","import React from \"react\"\r\nimport { useEffect } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { AppStateType } from \"../../BLL/store\"\r\nimport { DesireType } from \"../../Types/Types\"\r\nimport { Paginator } from \"../Bricks/Paginator\"\r\nimport { Card } from \"./Card\"\r\n\r\n\r\n\r\ntype PropsType={\r\n    isPC:boolean\r\n    pageSelector:(state:AppStateType)=>number\r\n    portionSizeSelector:(state:AppStateType)=>number\r\n    portionSizeElementsSelector:(state:AppStateType)=>number\r\n    elementsSelector:(state:AppStateType)=>DesireType[]\r\n    setPage:(page:number)=>void\r\n    title:string\r\n}\r\nexport const Template:React.FC<PropsType>=({\r\n    isPC,pageSelector,\r\n    portionSizeElementsSelector,\r\n    portionSizeSelector,title,\r\n    elementsSelector,setPage\r\n    })=>{\r\n    \r\n    useEffect(()=>{\r\n        return ()=>{\r\n            dispatch(setPage(1))\r\n        }\r\n    },[])\r\n\r\n\r\n    const dispatch=useDispatch()\r\n    const pageFromSelector=useSelector(pageSelector)\r\n    const portionSize=useSelector(portionSizeSelector)\r\n    const portionSizeElements=useSelector(portionSizeElementsSelector)\r\n    const elements=useSelector(elementsSelector)\r\n    const elementsJSX=elements.map(e=><Card title={e.title} />)\r\n    const callback=(page:number)=>{\r\n        dispatch(setPage(page))\r\n    }\r\n    \r\n    return<div className=\"template\">\r\n        <div className=\"container\">\r\n        { isPC ? <div className=\"row\">\r\n            <div className=\"col-md-9 template__title\">\r\n                {title}\r\n            </div>\r\n\r\n            <div className=\"col-md-3 center\">\r\n                <Paginator\r\n                count={elements.length}\r\n                page={pageFromSelector}\r\n                portionSize={portionSize}\r\n                portionSizeElements={portionSizeElements}\r\n                callback={callback} />\r\n            </div>\r\n\r\n            <div>\r\n                {[...elementsJSX]\r\n                .slice((pageFromSelector-1)*portionSizeElements,\r\n                (pageFromSelector)*portionSizeElements)}\r\n            </div>\r\n        </div> :\r\n        <div>\r\n            <div className=\"template__title center\">\r\n                {title}\r\n            </div>\r\n\r\n            <div>\r\n                {[...elementsJSX]\r\n                .slice((pageFromSelector-1)*portionSizeElements,\r\n                (pageFromSelector)*portionSizeElements)}\r\n            </div>\r\n\r\n            <div className=\"center template__buttons\">\r\n                <Paginator\r\n                count={elements.length}\r\n                page={pageFromSelector}\r\n                portionSize={portionSize}\r\n                portionSizeElements={portionSizeElements}\r\n                callback={callback} />\r\n            </div>\r\n        </div>}\r\n        </div>\r\n    </div>\r\n}\r\n\r\n","import React from \"react\"\r\nimport { useEffect } from \"react\"\r\nimport { useDispatch} from \"react-redux\"\r\nimport { setPage } from \"../../BLL/Reducers/desireReducer\"\r\nimport { desiresSelector, pageSelector, portionSizeElementsSelector, portionSizeSelector } from \"../../BLL/Selectors/desireSelector\"\r\nimport { Template } from \"../Bricks/Template\"\r\n\r\n\r\n\r\ntype PropsType={\r\n    isPC:boolean\r\n}\r\nexport const Desire:React.FC<PropsType>=({isPC})=>{\r\n    \r\n    useEffect(()=>{\r\n        return ()=>{\r\n            dispatch(setPage(1))\r\n        }\r\n    },[])\r\n\r\n\r\n    const dispatch=useDispatch()\r\n    \r\n    return<Template \r\n        isPC={isPC}\r\n        title={\"Пожелания\"}\r\n        setPage={setPage}\r\n        pageSelector={pageSelector}\r\n        portionSizeElementsSelector={portionSizeElementsSelector}\r\n        portionSizeSelector={portionSizeSelector}\r\n        elementsSelector={desiresSelector}/>\r\n}\r\n\r\n","\r\n\r\nimport { DB } from \"../../DB/DB\";\r\nimport { OtherType, ReasonType } from \"../../Types/Types\";\r\n\r\nconst SET_PAGE:\"otherReducer/SET_PAGE\"=\"otherReducer/SET_PAGE\"\r\n\r\nconst initialState={\r\n    others:[...DB.others] as OtherType[],\r\n    page:1 as number,\r\n    portionSizeElements:7 as number, // For count elements in one page\r\n    portionSize:5 as number //For count button in one portion\r\n}\r\n\r\ntype InitialStateType=typeof initialState\r\ntype ActionType=SetPageType\r\n\r\nexport const otherReducer=(state=initialState,action:ActionType):InitialStateType=>{\r\n    switch(action.type){\r\n        case SET_PAGE:\r\n            return{\r\n                ...state,\r\n                page:action.page\r\n            }\r\n        default:return state\r\n    }\r\n}\r\n\r\ntype SetPageType={\r\n    type:typeof SET_PAGE\r\n    page:number\r\n}\r\nexport const setPage=(page:number):SetPageType=>{\r\n    return{\r\n        type:SET_PAGE,\r\n        page\r\n    }\r\n}","\r\n\r\nimport { DB } from \"../../DB/DB\";\r\nimport { ReasonType } from \"../../Types/Types\";\r\n\r\nconst SET_PAGE:\"reasonReducer/SET_PAGE\"=\"reasonReducer/SET_PAGE\"\r\n\r\nconst initialState={\r\n    reasons:[...DB.reasons] as ReasonType[],\r\n    page:1 as number,\r\n    portionSizeElements:7 as number, // For count elements in one page\r\n    portionSize:5 as number //For count button in one portion\r\n}\r\n\r\ntype InitialStateType=typeof initialState\r\ntype ActionType=SetPageType\r\n\r\nexport const reasonReducer=(state=initialState,action:ActionType):InitialStateType=>{\r\n    switch(action.type){\r\n        case SET_PAGE:\r\n            return{\r\n                ...state,\r\n                page:action.page\r\n            }\r\n        default:return state\r\n    }\r\n}\r\n\r\ntype SetPageType={\r\n    type:typeof SET_PAGE\r\n    page:number\r\n}\r\nexport const setPage=(page:number):SetPageType=>{\r\n    return{\r\n        type:SET_PAGE,\r\n        page\r\n    }\r\n}","\r\nimport { DB } from \"../../DB/DB\";\r\nimport { DesireType, VeryType } from \"../../Types/Types\";\r\n\r\nconst SET_PAGE:\"veryReducer/SET_PAGE\"=\"veryReducer/SET_PAGE\"\r\n\r\nconst initialState={\r\n    very:[...DB.very] as VeryType[],\r\n    page:1 as number,\r\n    portionSizeElements:7 as number, // For count elements in one page\r\n    portionSize:5 as number //For count button in one portion\r\n}\r\n\r\ntype InitialStateType=typeof initialState\r\ntype ActionType=SetPageType\r\n\r\nexport const veryReducer=(state=initialState,action:ActionType):InitialStateType=>{\r\n    switch(action.type){\r\n        case SET_PAGE:\r\n            return{\r\n                ...state,\r\n                page:action.page\r\n            }\r\n        default:return state\r\n    }\r\n}\r\n\r\ntype SetPageType={\r\n    type:typeof SET_PAGE\r\n    page:number\r\n}\r\nexport const setPage=(page:number):SetPageType=>{\r\n    return{\r\n        type:SET_PAGE,\r\n        page\r\n    }\r\n}","import { combineReducers, createStore } from \"redux\";\r\nimport { desireReducer } from \"./Reducers/desireReducer\";\r\nimport { otherReducer } from \"./Reducers/otherReducer\";\r\nimport { reasonReducer } from \"./Reducers/reasonReducer\";\r\nimport { veryReducer } from \"./Reducers/veryReducer\";\r\n\r\n\r\n//Create rootReducer \r\nlet rootReducer=combineReducers({\r\n    desire:desireReducer,\r\n    very:veryReducer,\r\n    reason:reasonReducer,\r\n    other:otherReducer\r\n})\r\n\r\n//Take AppStateType\r\ntype RootReducerType=typeof rootReducer\r\nexport type AppStateType=ReturnType<RootReducerType>\r\n\r\n//store\r\nexport let store=createStore(rootReducer)\r\n\r\n","import { AppStateType } from \"../store\";\r\n\r\n\r\nexport const pageSelector=(state:AppStateType):number=>{\r\n    return state.very.page\r\n}\r\nexport const portionSizeSelector=(state:AppStateType)=>{\r\n    return state.very.portionSize\r\n}\r\nexport const verysSelector=(state:AppStateType)=>{\r\n    return state.very.very\r\n}\r\nexport const portionSizeElementsSelector=(state:AppStateType)=>{\r\n    return state.very.portionSizeElements\r\n}","import React from \"react\"\r\nimport { useEffect } from \"react\"\r\nimport { useDispatch} from \"react-redux\"\r\nimport { setPage } from \"../../BLL/Reducers/veryReducer\"\r\nimport { verysSelector, pageSelector, portionSizeElementsSelector, portionSizeSelector } from \"../../BLL/Selectors/verySelector\"\r\nimport { Template } from \"../Bricks/Template\"\r\n\r\n\r\n\r\ntype PropsType={\r\n    isPC:boolean\r\n}\r\nexport const Very:React.FC<PropsType>=({isPC})=>{\r\n    \r\n    useEffect(()=>{\r\n        return ()=>{\r\n            dispatch(setPage(1))\r\n        }\r\n    },[])\r\n\r\n\r\n    const dispatch=useDispatch()\r\n    \r\n    return<Template \r\n        isPC={isPC}\r\n        title={\"Тот самый)\"}\r\n        setPage={setPage}\r\n        pageSelector={pageSelector}\r\n        portionSizeElementsSelector={portionSizeElementsSelector}\r\n        portionSizeSelector={portionSizeSelector}\r\n        elementsSelector={verysSelector}/>\r\n}\r\n\r\n","import { AppStateType } from \"../store\";\r\n\r\n\r\nexport const pageSelector=(state:AppStateType):number=>{\r\n    return state.reason.page\r\n}\r\nexport const portionSizeSelector=(state:AppStateType)=>{\r\n    return state.reason.portionSize\r\n}\r\nexport const reasonsSelector=(state:AppStateType)=>{\r\n    return state.reason.reasons\r\n}\r\nexport const portionSizeElementsSelector=(state:AppStateType)=>{\r\n    return state.reason.portionSizeElements\r\n}","import React from \"react\"\r\nimport { useEffect } from \"react\"\r\nimport { useDispatch} from \"react-redux\"\r\nimport { setPage } from \"../../BLL/Reducers/reasonReducer\"\r\nimport { reasonsSelector, pageSelector, portionSizeElementsSelector, portionSizeSelector } from \"../../BLL/Selectors/reasonSelector\"\r\nimport { Template } from \"../Bricks/Template\"\r\n\r\n\r\n\r\ntype PropsType={\r\n    isPC:boolean\r\n}\r\nexport const Reason:React.FC<PropsType>=({isPC})=>{\r\n    \r\n    useEffect(()=>{\r\n        return ()=>{\r\n            dispatch(setPage(1))\r\n        }\r\n    },[])\r\n\r\n\r\n    const dispatch=useDispatch()\r\n    \r\n    return<Template \r\n        isPC={isPC}\r\n        title={\"Причины побить\"}\r\n        setPage={setPage}\r\n        pageSelector={pageSelector}\r\n        portionSizeElementsSelector={portionSizeElementsSelector}\r\n        portionSizeSelector={portionSizeSelector}\r\n        elementsSelector={reasonsSelector}/>\r\n}\r\n\r\n","import { AppStateType } from \"../store\";\r\n\r\n\r\nexport const pageSelector=(state:AppStateType):number=>{\r\n    return state.other.page\r\n}\r\nexport const portionSizeSelector=(state:AppStateType)=>{\r\n    return state.other.portionSize\r\n}\r\nexport const othersSelector=(state:AppStateType)=>{\r\n    return state.other.others\r\n}\r\nexport const portionSizeElementsSelector=(state:AppStateType)=>{\r\n    return state.other.portionSizeElements\r\n}","import React from \"react\"\r\nimport { useEffect } from \"react\"\r\nimport { useDispatch} from \"react-redux\"\r\nimport { setPage } from \"../../BLL/Reducers/otherReducer\"\r\nimport { othersSelector, pageSelector, portionSizeElementsSelector, portionSizeSelector } from \"../../BLL/Selectors/otherSelector\"\r\nimport { Template } from \"../Bricks/Template\"\r\n\r\n\r\n\r\ntype PropsType={\r\n    isPC:boolean\r\n}\r\nexport const Other:React.FC<PropsType>=({isPC})=>{\r\n    \r\n    useEffect(()=>{\r\n        return ()=>{\r\n            dispatch(setPage(1))\r\n        }\r\n    },[])\r\n\r\n\r\n    const dispatch=useDispatch()\r\n    \r\n    return<Template \r\n        isPC={isPC}\r\n        title={\"Другое\"}\r\n        setPage={setPage}\r\n        pageSelector={pageSelector}\r\n        portionSizeElementsSelector={portionSizeElementsSelector}\r\n        portionSizeSelector={portionSizeSelector}\r\n        elementsSelector={othersSelector}/>\r\n}\r\n\r\n","import { AlinaName, DB } from \"../../DB/DB\"\r\n\r\n\r\n\r\ntype PropsType={\r\n    isPC:boolean\r\n}\r\nexport const Author:React.FC<PropsType>=({isPC})=>{\r\n\r\n    let authors=DB.authors.map(a=><div \r\n    key={a.title}\r\n    className=\"col-md-6 text-center text-white title mt-2\">\r\n        {(a.title) ? a.title : AlinaName}\r\n    </div>)\r\n\r\n    return<div className=\"template\">\r\n        <div className=\"container\">\r\n        { isPC ? <div>\r\n            <div className=\"text-center template__title\">\r\n                Авторы\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                {authors}\r\n            </div>\r\n        </div> :\r\n        <div>\r\n            <div className=\"template__title center\">\r\n                Авторы\r\n            </div>\r\n\r\n            <div>\r\n                {authors}\r\n            </div>\r\n\r\n        </div>}\r\n        </div>\r\n    </div>\r\n}","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { Header } from './UI/Header/Header';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport { Main } from './UI/Main/Main';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { Desire } from './UI/Desire/Desire';\nimport { Provider } from 'react-redux';\nimport {store} from \"./BLL/store\"\nimport { Very } from './UI/Very/Very';\nimport { Reason } from './UI/Reason/Reason';\nimport { Other } from './UI/Other/Other';\nimport { Author } from './UI/Authors/Author';\n\nfunction App() {\n  const diff=65\n  let [height,setHeight]=useState(window.innerHeight-diff)\n  let [isPC,setMode]=useState(window.innerWidth>760 ? true : false)\n  const setSize=()=>{\n    setHeight(window.innerHeight-diff)\n      if(window.innerWidth>760){\n        setMode(true)\n      }else{\n        setMode(false)\n      }\n  }\n\n  useEffect(()=>{\n    window.addEventListener(\"resize\",setSize)\n    return (()=>{\n      window.removeEventListener(\"resize\",setSize)\n    })\n  },[])\n  \n  return (\n    <Provider store={store}>\n    <HashRouter>\n      <div>\n        <Header/>\n        <div style={{height}} className=\"body pt-3\">\n        <Switch>\n          <Route path=\"/desire\" \n          render={()=><Desire isPC={isPC} />}/>\n          <Route path=\"/very\" \n          render={()=><Very isPC={isPC} />}/>\n          <Route path=\"/reason\" \n          render={()=><Reason isPC={isPC} />}/>\n          <Route path=\"/other\" \n          render={()=><Other isPC={isPC} />}/>\n          <Route path=\"/author\" \n          render={()=><Author isPC={isPC} />} />\n          <Route path=\"/\"\n          render={()=><Main height={height}  />} />\n        </Switch>\n        </div>\n      </div>\n    </HashRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}